(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-57eeefa8"],{"4d27":function(t,e,a){},8786:function(t,e,a){"use strict";var n=a("4d27"),r=a.n(n);r.a},dedd:function(t,e,a){"use strict";var n=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("h1",{staticClass:"text-center"},[t._v(t._s(t.data.title))]),a("h5",[t._v("\n        作者: \n        "),a("span",[t._v(t._s(t.data.author))])]),a("h5",[t._v("\n        日期: \n        "),a("span",[t._v(t._s(t.data.date))])]),a("a",{staticClass:"btn link backbtn",on:{click:function(e){return t.goback()}}},[t._v("返回上页")]),a("hr",{staticClass:"line"})])},r=[],i=a("d225"),c=a("b0b4"),s=a("308d"),o=a("6bb5"),v=a("4e2b"),b=a("9ab4"),d=a("60a3"),u=function(t){function e(){return Object(i["a"])(this,e),Object(s["a"])(this,Object(o["a"])(e).apply(this,arguments))}return Object(v["a"])(e,t),Object(c["a"])(e,[{key:"goback",value:function(){this.$router.go(-1)}}]),e}(d["c"]);b["a"]([Object(d["b"])()],u.prototype,"data",void 0),u=b["a"]([d["a"]],u);var p=u,_=p,h=(a("8786"),a("2877")),l=Object(h["a"])(_,n,r,!1,null,"4d0669a8",null);e["a"]=l.exports},ed19:function(t,e,a){"use strict";a.r(e);var n=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"wz-page"},[a("articleheader",{attrs:{data:t.artheader}}),a("h3",[t._v("字长")]),a("p",[t._v("计算机能表示的数值大小有限制,受限于字长.例如8位机能表示的整数范围[-128~127],二进制是[10000000~01111111]")]),a("p",[t._v("64位计算机能表示的无符号整数是2^64-1.总是有个范围,而如果要表示超过个范围的数,则需要另想办法.")]),a("h3",[t._v("BigInteger类")]),a("p",[t._v("C#的BigInteger类用于表示超过字长范围的数.        理论上长度无限,在计算机中受限于内存大小.")]),t._m(0),a("p",[t._v("该类提供了很多方法,除了表示大整数外,可以对其进行加减乘除取余移位等操作.这次研究它提供的构造方法,将一个字节序列转为大整数.")]),a("h3",[t._v("示例byte[]转BigInteger")]),a("p",[t._v("定义10长度的字节序列 byte[] arr = byte[10] 将最后一位赋值1: byte[9] = 1")]),a("p",[t._v("实例化成大整数  BigInteger a = new BigInteger(arr); 它的值是 4722366482869645213696 是个长度为22的大整数,那么是如何得来的.")]),a("p",[t._v("根据测试,Biginteger将传入的数组从后往前分别做为大整数的二进制形式的高位到低位.arr字节序列转换为大整数后二进制如下:")]),a("p",[t._v("00000001,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000 总共10个字节,而这个计算出来变成十进制就是")]),a("p",[t._v("2^72 = 4722366482869645213696 注意,最高位表示符号位,如果是1则为负值,二进制是补码.而如果是0,则是正值.这是一个由10字节表示的大整数.")]),a("p",[t._v("反过来,通过ToByteArray()这个实例方法,可以由大整数得到它的字节.")]),a("h3",[t._v("正负")]),a("p",[t._v("由于字符最高位是符号位,所以数会有正负问题.在希望得到正整数的时候,使用这个构造函数 new BigInteger(bytes,true) 第二个参数true说明是无符号数")]),a("h3",[t._v("字节高低位")]),a("p",[t._v("示例中得到的大整数的字节高低位与传入的字节数组索引高低位相反,最后一个索引的字节是大整数的二进制最高位.这个习惯感觉是倒着的,如果字节数组的0位")]),a("p",[t._v("就是大整数二进制的最高位,那么感觉会习惯一些.new BigInteger(bytes,true,true) 第三个参数为true时,可以实现.")]),a("p",[t._v("这个问题其实是 Little-endian：将低序字节存储在起始地址(低位编址) 和  Big-endian：将高序字节存储在起始地址(高位编址)")]),a("p",[t._v("具体就没研究,显然,只要按同一个方案来,就没问题")])],1)},r=[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("\n        文档:\n        "),a("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/dotnet/api/system.numerics.biginteger?redirectedfrom=MSDN&view=netframework-4.8",target:"_blank"}},[t._v("https://docs.microsoft.com/zh-cn/dotnet/api/system.numerics.biginteger?redirectedfrom=MSDN&view=netframework-4.8")])])}],i=a("d225"),c=a("308d"),s=a("6bb5"),o=a("4e2b"),v=a("9ab4"),b=a("60a3"),d=a("dedd"),u=function(t){function e(){return Object(i["a"])(this,e),Object(c["a"])(this,Object(s["a"])(e).apply(this,arguments))}return Object(o["a"])(e,t),e}(b["c"]);v["a"]([Object(b["b"])()],u.prototype,"artheader",void 0),u=v["a"]([Object(b["a"])({components:{articleheader:d["a"]}})],u);var p=u,_=p,h=a("2877"),l=Object(h["a"])(_,n,r,!1,null,"229d50a5",null);e["default"]=l.exports}}]);