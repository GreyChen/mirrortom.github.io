(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-4a3f5d9d"],{"57b1":function(e,t,n){"use strict";var r=n("f99d"),a=n.n(r);a.a},dedd:function(e,t,n){"use strict";var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("h1",{staticClass:"text-center"},[e._v(e._s(this.$route.query.title))]),n("h5",[e._v("\n        作者: \n        "),n("span",[e._v(e._s(this.$route.query.author))])]),n("h5",[e._v("\n        日期: \n        "),n("span",[e._v(e._s(this.$route.query.date))])]),n("a",{staticClass:"btn link backbtn",on:{click:function(t){return e.goback()}}},[e._v("返回上页")]),n("hr",{staticClass:"line"})])},a=[],i=n("d225"),c=n("b0b4"),s=n("308d"),u=n("6bb5"),o=n("4e2b"),b=n("9ab4"),v=n("60a3"),_=function(e){function t(){return Object(i["a"])(this,t),Object(s["a"])(this,Object(u["a"])(t).apply(this,arguments))}return Object(o["a"])(t,e),Object(c["a"])(t,[{key:"goback",value:function(){this.$router.go(-1)}}]),t}(v["b"]);_=b["a"]([v["a"]],_);var p=_,d=p,h=(n("57b1"),n("2877")),l=Object(h["a"])(d,r,a,!1,null,"cad40f34",null);t["a"]=l.exports},ed19:function(e,t,n){"use strict";n.r(t);var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"wz-page"},[n("articleheader"),n("h3",[e._v("字长")]),n("p",[e._v("计算机能表示的数值大小有限制,受限于字长.例如8位机能表示的整数范围[-128~127],二进制是[10000000~01111111]")]),n("p",[e._v("64位计算机能表示的无符号整数是2^64-1.总是有个范围,而如果要表示超过个范围的数,则需要另想办法.")]),n("h3",[e._v("BigInteger类")]),n("p",[e._v("C#的BigInteger类用于表示超过字长范围的数.        理论上长度无限,在计算机中受限于内存大小.")]),e._m(0),n("p",[e._v("该类提供了很多方法,除了表示大整数外,可以对其进行加减乘除取余移位等操作.这次研究它提供的构造方法,将一个字节序列转为大整数.")]),n("h3",[e._v("示例byte[]转BigInteger")]),n("p",[e._v("定义10长度的字节序列 byte[] arr = byte[10] 将最后一位赋值1: byte[9] = 1")]),n("p",[e._v("实例化成大整数  BigInteger a = new BigInteger(arr); 它的值是 4722366482869645213696 是个长度为22的大整数,那么是如何得来的.")]),n("p",[e._v("根据测试,Biginteger将传入的数组从后往前分别做为大整数的二进制形式的高位到低位.arr字节序列转换为大整数后二进制如下:")]),n("p",[e._v("00000001,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000 总共10个字节,而这个计算出来变成十进制就是")]),n("p",[e._v("2^72 = 4722366482869645213696 注意,最高位表示符号位,如果是1则为负值,二进制是补码.而如果是0,则是正值.这是一个由10字节表示的大整数.")]),n("p",[e._v("反过来,通过ToByteArray()这个实例方法,可以由大整数得到它的字节.")]),n("h3",[e._v("正负")]),n("p",[e._v("由于字符最高位是符号位,所以数会有正负问题.在希望得到正整数的时候,使用这个构造函数 new BigInteger(bytes,true) 第二个参数true说明是无符号数")]),n("h3",[e._v("字节高低位")]),n("p",[e._v("示例中得到的大整数的字节高低位与传入的字节数组索引高低位相反,最后一个索引的字节是大整数的二进制最高位.这个习惯感觉是倒着的,如果字节数组的0位")]),n("p",[e._v("就是大整数二进制的最高位,那么感觉会习惯一些.new BigInteger(bytes,true,true) 第三个参数为true时,可以实现.")]),n("p",[e._v("这个问题其实是 Little-endian：将低序字节存储在起始地址(低位编址) 和  Big-endian：将高序字节存储在起始地址(高位编址)")]),n("p",[e._v("具体就没研究,显然,只要按同一个方案来,就没问题")])],1)},a=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("\n        文档:\n        "),n("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/dotnet/api/system.numerics.biginteger?redirectedfrom=MSDN&view=netframework-4.8",target:"_blank"}},[e._v("https://docs.microsoft.com/zh-cn/dotnet/api/system.numerics.biginteger?redirectedfrom=MSDN&view=netframework-4.8")])])}],i=n("d225"),c=n("308d"),s=n("6bb5"),u=n("4e2b"),o=n("9ab4"),b=n("60a3"),v=n("dedd"),_=function(e){function t(){return Object(i["a"])(this,t),Object(c["a"])(this,Object(s["a"])(t).apply(this,arguments))}return Object(u["a"])(t,e),t}(b["b"]);_=o["a"]([Object(b["a"])({components:{articleheader:v["a"]}})],_);var p=_,d=p,h=n("2877"),l=Object(h["a"])(d,r,a,!1,null,"316a060f",null);t["default"]=l.exports},f99d:function(e,t,n){}}]);